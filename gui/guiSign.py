
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path
from tkinter import *
import tkinter.filedialog as fd
import tkinter.messagebox as tkmb
import sys
import guiLanding
sys.path.append("../Kripto_3/src/")
from RSA import sign_message, sign_file


OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path(r"assets/frame2")


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)


class Sign(Frame):
    def __init__(self, master):
        Frame.__init__(self, master, width = 1200, height = 800, bg = "#FFFFFF")
        self.canvas = Canvas(
            master,
            bg = "#FFFFFF",
            height = 800,
            width = 1200,
            bd = 0,
            highlightthickness = 0,
            relief = "ridge"
        )

        self.istext = True
        self.prikey = (0, 0)

        def read_key():
            filetypes = [('private key', ".priv")]
            filename = ""
            filename = fd.askopenfile(filetypes=filetypes)
            filename = str(filename).split("'")[1]
            with open(filename, "r") as f:
                keystring = f.read()
                keystring = keystring.replace("(", "").replace(")", "")
                self.prikey = tuple(map(int, keystring.split(",")))
            self.entry_1.insert(END, self.prikey[0])

        def upload_pressed():
            self.entry_2.delete(1.0, END)
            filetypes = [('text files', '*.txt'),('All files', '*.*')]
            filename = ""
            filename = fd.askopenfile(filetypes=filetypes)
            filename = str(filename).split("'")[1]
            self.entry_2.insert(END, filename)
            self.istext = False
            self.entry_2.config(state=DISABLED)
        
        def save_pressed():
            if (self.entry_1.get(1.0, END).replace("\n","") == ""):
                tkmb.showerror("Error", "Please enter a key")
                return
            elif (self.entry_2.get(1.0, END).replace("\n","") == ""):  
                tkmb.showerror("Error", "Please enter a file")
                return
            else:   
                if (radio.get()==1): #add to file
                    if self.istext:
                        message = self.entry_2.get(1.0,END).replace("\n","")
                        signature = sign_message(message,self.prikey)
                        filename = ""
                        if filename =="":
                            filename = fd.asksaveasfilename(defaultextension=".txt")
                        if filename != "":
                            with open(filename, 'w') as f:
                                f.write(self.entry_2.get(1.0, END))
                                f.writelines([f'\n*** Begin of digital signature ****\n', f'{signature}\n', '*** End of digital signature ****'])
                                f.close()
                                tkmb.showinfo("save", "save complete")
                    elif (self.entry_2.get(1.0,END).replace("\n","").endswith(".txt")):
                        filename = self.entry_2.get(1.0,END).replace("\n","")
                        with open(filename, 'r') as f:
                            message = f.read()
                            signature = sign_message(message,self.prikey)
                        with open(filename, 'a') as f:
                            f.writelines([f'\n*** Begin of digital signature ****\n', f'{signature}\n', '*** End of digital signature ****'])
                            f.close()
                            tkmb.showinfo("save", "save complete")
                    else:
                        tkmb.showerror("Error", "Unable to add to current file type, please save signature in a seperate file or choose a different file type")
                else: #separate file
                    if self.istext:
                        tkmb.showinfo("save", "save your message file")
                        textfile = ""
                        if textfile =="":
                            textfile = fd.asksaveasfilename(defaultextension=".txt")
                        if textfile != "":
                            with open(textfile, 'w') as f:
                                f.write(self.entry_2.get(1.0, END))
                                f.close()
                                tkmb.showinfo("save", "save complete")
                        signature = sign_message(self.entry_2.get(1.0,END).replace("\n",""),self.prikey)
                        tkmb.showinfo("save", "save your signature file")
                        savefile = ""
                        if savefile =="":
                            savefile = fd.asksaveasfilename(defaultextension=".txt")
                        if savefile != "":
                            with open(savefile, 'w') as f:
                                f.writelines([f'*** Begin of digital signature ****\n', f'{signature}\n','*** End of digital signature ****'])
                                f.close()
                            tkmb.showinfo("save", "save complete")
                    else:
                        signature = sign_file(self.entry_2.get(1.0,END).replace("\n",""),self.prikey)
                        tkmb.showinfo("save", "save your signature file")
                        savefile = ""
                        if savefile =="":
                            savefile = fd.asksaveasfilename(defaultextension=".txt")
                        if savefile != "":
                            with open(savefile, 'w') as f:
                                f.writelines([f'*** Begin of digital signature ****\n', f'{signature}\n','*** End of digital signature ****'])
                                f.close()
                            tkmb.showinfo("save", "save complete")
                self.entry_3.insert(END,f"*** Begin of digital signature ****\n{signature}\n*** End of digital signature ****")
                    
        scrollbar = Scrollbar(orient="horizontal")

        self.canvas.place(x = 0, y = 0)
        self.canvas.create_text(
            336.0,
            38.0,
            anchor="nw",
            text="Signing Digital Signature",
            fill="#28293D",
            font=("Poppins SemiBold", 42 * -1)
        )

        self.canvas.create_text(
            95.0,
            118.0247802734375,
            anchor="nw",
            text="Private Key",
            fill="#000000",
            font=("OpenSansRoman Regular", 20 * -1)
        )

        self.canvas.create_text(
            95.0,
            228.26953125,
            anchor="nw",
            text="Message/File",
            fill="#000000",
            font=("OpenSansRoman Regular", 20 * -1)
        )

        self.canvas.create_text(
            556.0,
            448.7587890625,
            anchor="nw",
            text="Result",
            fill="#28293D",
            font=("OpenSansRoman Bold", 27 * -1)
        )

        self.entry_image_1 = PhotoImage(
            file=relative_to_assets("entry_1.png"))
        self.entry_bg_1 = self.canvas.create_image(
            600.0,
            180.5,
            image=self.entry_image_1
        )
        self.entry_1 = Text(
            bd=0,
            bg="#D9E4E8",
            fg="#000716",
            font=("OpenSansRoman Regular", 20 * -1),
            highlightthickness=0,
            xscrollcommand=scrollbar.set
        )
        self.entry_1.place(
            x=112.09219741821289,
            y=170.0,
            width=920,
            height=25
        )

        self.entry_image_2 = PhotoImage(
            file=relative_to_assets("entry_2.png"))
        self.entry_bg_2 = self.canvas.create_image(
            600.0,
            297.5,
            image=self.entry_image_2
        )
        self.entry_2 = Text(
            bd=0,
            bg="#D9E4E8",
            fg="#000716",
            font=("OpenSansRoman Regular", 20 * -1),
            highlightthickness=0,
            xscrollcommand=scrollbar.set
        )
        self.entry_2.place(
            x=112.09219741821289,
            y=287.0,
            width=920,
            height=25
        )

        self.canvas.create_text(
            95.0,
            345.35107421875,
            anchor="nw",
            text="Digital Signature Option",
            fill="#000000",
            font=("OpenSansRoman Regular", 20 * -1)
        )

        self.canvas.create_text(
            95.0,
            490.634765625,
            anchor="nw",
            text="Digital Signature",
            fill="#000000",
            font=("OpenSansRoman Regular", 20 * -1)
        )

        self.entry_image_3 = PhotoImage(
            file=relative_to_assets("entry_3.png"))
        self.entry_bg_3 = self.canvas.create_image(
            600.0,
            598.5,
            image=self.entry_image_3
        )
        self.entry_3 = Text(
            bd=0,
            bg="#D9E4E8",
            fg="#000716",
            font=("OpenSansRoman Regular", 20 * -1),
            highlightthickness=0,
            xscrollcommand=scrollbar.set
        )
        self.entry_3.place(
            x=115,
            y=540,
            width=975.8156051635742,
            height=120.0
        )

        # canvas.create_rectangle(
        #     119.78369140625,
        #     392.3546142578125,
        #     425.7340087890625,
        #     423.1205711364746,
        #     fill="#000000",
        #     outline="")
        radio = IntVar()
        self.R1= Radiobutton(
            text="Store in separate file",
            font=("OpenSansRoman Regular", 20 * -1),
            background="#FFFFFF",
            value=0,
            variable=radio,
            anchor=NW
        )

        self.R1.place(
            x = 119.78369140625,
            y = 392.3546142578125
        )

        self.R2= Radiobutton(
            text="Add in current file",
            font=("OpenSansRoman Regular", 20 * -1),
            background="#FFFFFF",
            value=1,
            variable=radio,
            anchor=NW
        )

        self.R2.place(
            x = 503.50341796875,
            y = 392.3546142578125
        )


        self.button_image_1 = PhotoImage(
            file=relative_to_assets("button_1.png"))
        self.button_1 = Button(
            image=self.button_image_1,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: self.master.switch_frame(guiLanding.Landing),
            relief="flat"
        )
        self.button_1.place(
            x=618.82763671875,
            y=701.0,
            width=222.0933837890625,
            height=70.0780029296875
        )

        self.button_image_2 = PhotoImage(
            file=relative_to_assets("button_2.png"))
        self.button_2 = Button(
            image=self.button_image_2,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: save_pressed(),
            relief="flat"
        )
        self.button_2.place(
            x=359.0,
            y=701.0,
            width=222.0933837890625,
            height=70.0780029296875
        )

        self.button_image_6 = PhotoImage(
            file=relative_to_assets("button_6.png"))
        self.button_6 = Button(
            image=self.button_image_6,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: read_key(),
            relief="flat"
        )
        self.button_6.place(
            x=1050,
            y=170.0,
            width=25,
            height=25,
            anchor=NW
        )

        self.button_7 = Button(
            image=self.button_image_6,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: upload_pressed(),
            relief="flat"
        )
        self.button_7.place(
            x=1050,
            y=287.0,
            width=25,
            height=25,
            anchor=NW
        )